Terminals unused in grammar

   CRLF


状态 4conflicts: 1 shift/reduce
状态 37conflicts: 1 shift/reduce
状态 40conflicts: 1 shift/reduce
状态 58conflicts: 1 shift/reduce
状态 106conflicts: 1 shift/reduce
状态 107conflicts: 1 shift/reduce
状态 108conflicts: 1 shift/reduce
状态 109conflicts: 1 shift/reduce


语法

    0 $accept: translation_unit $end

    1 translation_unit: definition_or_statement
    2                 | translation_unit definition_or_statement

    3 definition_or_statement: function_definition
    4                        | statement

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP RP block
    7                    | FUNCTION LP RP block
    8                    | FUNCTION LP parameter_list RP block

    9 parameter_list: parameter_list COMMA IDENTIFIER
   10               | IDENTIFIER

   11 statement_list: statement
   12               | statement_list statement

   13 statement: expression SEMICOLON
   14          | expression
   15          | if_statement
   16          | global_statement
   17          | while_statement
   18          | for_statement
   19          | return_statement
   20          | continue_statement
   21          | break_statement

   22 break_statement: BREAK SEMICOLON

   23 if_statement: IF LP expression RP block
   24             | IF LP expression RP block ELSE block
   25             | IF LP expression RP block elsif_list
   26             | IF LP expression RP block elsif_list ELSE block

   27 elsif_list: elsif
   28           | elsif_list elsif

   29 elsif: ELSIF LP expression RP block

   30 global_statement: GLOBAL_T identifier_list SEMICOLON

   31 identifier_list: IDENTIFIER
   32                | identifier_list COMMA IDENTIFIER

   33 while_statement: WHILE LP expression RP block

   34 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

   35 return_statement: RETURN_T expression_opt SEMICOLON

   36 continue_statement: CONTINUE SEMICOLON

   37 block: LC statement_list RC
   38      | LC RC

   39 expression_opt: %empty
   40               | expression

   41 expression_list: %empty
   42                | expression
   43                | expression_list COMMA expression

   44 expression: logical_or_expression
   45           | postfix_expression ASSIGN expression
   46           | VAR postfix_expression ASSIGN expression
   47           | VAR postfix_expression SEMICOLON

   48 logical_or_expression: logical_and_expression
   49                      | logical_or_expression LOGICAL_OR logical_and_expression

   50 logical_and_expression: equality_expression
   51                       | logical_and_expression LOGICAL_AND equality_expression

   52 equality_expression: relational_expression
   53                    | equality_expression EQ relational_expression
   54                    | equality_expression NE relational_expression

   55 relational_expression: additive_expression
   56                      | relational_expression GT additive_expression
   57                      | relational_expression GE additive_expression
   58                      | relational_expression LT additive_expression
   59                      | relational_expression LE additive_expression

   60 additive_expression: multiplicative_expression
   61                    | additive_expression ADD multiplicative_expression
   62                    | additive_expression SUB multiplicative_expression

   63 multiplicative_expression: unary_expression
   64                          | multiplicative_expression MUL unary_expression
   65                          | multiplicative_expression DIV unary_expression
   66                          | multiplicative_expression MOD unary_expression

   67 unary_expression: postfix_expression
   68                 | SUB unary_expression

   69 postfix_expression: primary_expression
   70                   | postfix_expression LB expression RB
   71                   | postfix_expression DOT IDENTIFIER LP argument_list RP
   72                   | postfix_expression DOT IDENTIFIER LP RP
   73                   | postfix_expression INCREMENT
   74                   | postfix_expression DECREMENT
   75                   | postfix_expression DOT IDENTIFIER ASSIGN function_definition

   76 argument_list: expression
   77              | argument_list COMMA expression

   78 primary_expression: IDENTIFIER LP argument_list RP
   79                   | IDENTIFIER LP RP
   80                   | LP expression RP
   81                   | IDENTIFIER
   82                   | INT_LITERAL
   83                   | DOUBLE_LITERAL
   84                   | STRING_LITERAL
   85                   | TRUE_T
   86                   | FALSE_T
   87                   | NULL_T
   88                   | array_literal

   89 array_literal: LB expression_list RB
   90              | LC expression_list COMMA RC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 82
DOUBLE_LITERAL (259) 83
STRING_LITERAL (260) 84
IDENTIFIER (261) 5 6 9 10 31 32 71 72 75 78 79 81
FUNCTION (262) 5 6 7 8
IF (263) 23 24 25 26
ELSE (264) 24 26
ELSIF (265) 29
WHILE (266) 33
FOR (267) 34
RETURN_T (268) 35
BREAK (269) 22
CONTINUE (270) 36
NULL_T (271) 87
CRLF (272)
LP (273) 5 6 7 8 23 24 25 26 29 33 34 71 72 78 79 80
RP (274) 5 6 7 8 23 24 25 26 29 33 34 71 72 78 79 80
LC (275) 37 38 90
RC (276) 37 38 90
LB (277) 70 89
RB (278) 70 89
SEMICOLON (279) 13 22 30 34 35 36 47
COMMA (280) 9 32 43 77 90
ASSIGN (281) 45 46 75
LOGICAL_AND (282) 51
LOGICAL_OR (283) 49
EQ (284) 53
NE (285) 54
GT (286) 56
GE (287) 57
LT (288) 58
LE (289) 59
ADD (290) 61
SUB (291) 62 68
MUL (292) 64
DIV (293) 65
MOD (294) 66
TRUE_T (295) 85
FALSE_T (296) 86
GLOBAL_T (297) 30
DOT (298) 71 72 75
VAR (299) 46 47
INCREMENT (300) 73
DECREMENT (301) 74


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
translation_unit (48)
    on left: 1 2, on right: 0 2
definition_or_statement (49)
    on left: 3 4, on right: 1 2
function_definition (50)
    on left: 5 6 7 8, on right: 3 75
parameter_list (51)
    on left: 9 10, on right: 5 8 9
statement_list (52)
    on left: 11 12, on right: 12 37
statement (53)
    on left: 13 14 15 16 17 18 19 20 21, on right: 4 11 12
break_statement (54)
    on left: 22, on right: 21
if_statement (55)
    on left: 23 24 25 26, on right: 15
elsif_list (56)
    on left: 27 28, on right: 25 26 28
elsif (57)
    on left: 29, on right: 27 28
global_statement (58)
    on left: 30, on right: 16
identifier_list (59)
    on left: 31 32, on right: 30 32
while_statement (60)
    on left: 33, on right: 17
for_statement (61)
    on left: 34, on right: 18
return_statement (62)
    on left: 35, on right: 19
continue_statement (63)
    on left: 36, on right: 20
block (64)
    on left: 37 38, on right: 5 6 7 8 23 24 25 26 29 33 34
expression_opt (65)
    on left: 39 40, on right: 34 35
expression_list (66)
    on left: 41 42 43, on right: 43 89 90
expression (67)
    on left: 44 45 46 47, on right: 13 14 23 24 25 26 29 33 40 42 43
    45 46 70 76 77 80
logical_or_expression (68)
    on left: 48 49, on right: 44 49
logical_and_expression (69)
    on left: 50 51, on right: 48 49 51
equality_expression (70)
    on left: 52 53 54, on right: 50 51 53 54
relational_expression (71)
    on left: 55 56 57 58 59, on right: 52 53 54 56 57 58 59
additive_expression (72)
    on left: 60 61 62, on right: 55 56 57 58 59 61 62
multiplicative_expression (73)
    on left: 63 64 65 66, on right: 60 61 62 64 65 66
unary_expression (74)
    on left: 67 68, on right: 63 64 65 66 68
postfix_expression (75)
    on left: 69 70 71 72 73 74 75, on right: 45 46 47 67 70 71 72 73
    74 75
argument_list (76)
    on left: 76 77, on right: 71 77 78
primary_expression (77)
    on left: 78 79 80 81 82 83 84 85 86 87 88, on right: 69
array_literal (78)
    on left: 89 90, on right: 88


State 0

    0 $accept: . translation_unit $end

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    VAR             shift, and go to state 20

    translation_unit           转到状态 21
    definition_or_statement    转到状态 22
    function_definition        转到状态 23
    statement                  转到状态 24
    break_statement            转到状态 25
    if_statement               转到状态 26
    global_statement           转到状态 27
    while_statement            转到状态 28
    for_statement              转到状态 29
    return_statement           转到状态 30
    continue_statement         转到状态 31
    expression                 转到状态 32
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 1

   82 primary_expression: INT_LITERAL .

    $default  reduce using rule 82 (primary_expression)


State 2

   83 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 83 (primary_expression)


State 3

   84 primary_expression: STRING_LITERAL .

    $default  reduce using rule 84 (primary_expression)


State 4

   78 primary_expression: IDENTIFIER . LP argument_list RP
   79                   | IDENTIFIER . LP RP
   81                   | IDENTIFIER .

    LP  shift, and go to state 43

    LP        [reduce using rule 81 (primary_expression)]
    $default  reduce using rule 81 (primary_expression)


State 5

    5 function_definition: FUNCTION . IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION . IDENTIFIER LP RP block
    7                    | FUNCTION . LP RP block
    8                    | FUNCTION . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 44
    LP          shift, and go to state 45


State 6

   23 if_statement: IF . LP expression RP block
   24             | IF . LP expression RP block ELSE block
   25             | IF . LP expression RP block elsif_list
   26             | IF . LP expression RP block elsif_list ELSE block

    LP  shift, and go to state 46


State 7

   33 while_statement: WHILE . LP expression RP block

    LP  shift, and go to state 47


State 8

   34 for_statement: FOR . LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

    LP  shift, and go to state 48


State 9

   35 return_statement: RETURN_T . expression_opt SEMICOLON

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    $default  reduce using rule 39 (expression_opt)

    expression_opt             转到状态 49
    expression                 转到状态 50
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 10

   22 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 11

   36 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 12

   87 primary_expression: NULL_T .

    $default  reduce using rule 87 (primary_expression)


State 13

   80 primary_expression: LP . expression RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 53
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 14

   90 array_literal: LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    $default  reduce using rule 41 (expression_list)

    expression_list            转到状态 54
    expression                 转到状态 55
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 15

   89 array_literal: LB . expression_list RB

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    $default  reduce using rule 41 (expression_list)

    expression_list            转到状态 56
    expression                 转到状态 55
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 16

   68 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    转到状态 57
    postfix_expression  转到状态 58
    primary_expression  转到状态 41
    array_literal       转到状态 42


State 17

   85 primary_expression: TRUE_T .

    $default  reduce using rule 85 (primary_expression)


State 18

   86 primary_expression: FALSE_T .

    $default  reduce using rule 86 (primary_expression)


State 19

   30 global_statement: GLOBAL_T . identifier_list SEMICOLON

    IDENTIFIER  shift, and go to state 59

    identifier_list  转到状态 60


State 20

   46 expression: VAR . postfix_expression ASSIGN expression
   47           | VAR . postfix_expression SEMICOLON

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    postfix_expression  转到状态 61
    primary_expression  转到状态 41
    array_literal       转到状态 42


State 21

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 62
    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    VAR             shift, and go to state 20

    definition_or_statement    转到状态 63
    function_definition        转到状态 23
    statement                  转到状态 24
    break_statement            转到状态 25
    if_statement               转到状态 26
    global_statement           转到状态 27
    while_statement            转到状态 28
    for_statement              转到状态 29
    return_statement           转到状态 30
    continue_statement         转到状态 31
    expression                 转到状态 32
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 22

    1 translation_unit: definition_or_statement .

    $default  reduce using rule 1 (translation_unit)


State 23

    3 definition_or_statement: function_definition .

    $default  reduce using rule 3 (definition_or_statement)


State 24

    4 definition_or_statement: statement .

    $default  reduce using rule 4 (definition_or_statement)


State 25

   21 statement: break_statement .

    $default  reduce using rule 21 (statement)


State 26

   15 statement: if_statement .

    $default  reduce using rule 15 (statement)


State 27

   16 statement: global_statement .

    $default  reduce using rule 16 (statement)


State 28

   17 statement: while_statement .

    $default  reduce using rule 17 (statement)


State 29

   18 statement: for_statement .

    $default  reduce using rule 18 (statement)


State 30

   19 statement: return_statement .

    $default  reduce using rule 19 (statement)


State 31

   20 statement: continue_statement .

    $default  reduce using rule 20 (statement)


State 32

   13 statement: expression . SEMICOLON
   14          | expression .

    SEMICOLON  shift, and go to state 64

    $default  reduce using rule 14 (statement)


State 33

   44 expression: logical_or_expression .
   49 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 65

    $default  reduce using rule 44 (expression)


State 34

   48 logical_or_expression: logical_and_expression .
   51 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 66

    $default  reduce using rule 48 (logical_or_expression)


State 35

   50 logical_and_expression: equality_expression .
   53 equality_expression: equality_expression . EQ relational_expression
   54                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 67
    NE  shift, and go to state 68

    $default  reduce using rule 50 (logical_and_expression)


State 36

   52 equality_expression: relational_expression .
   56 relational_expression: relational_expression . GT additive_expression
   57                      | relational_expression . GE additive_expression
   58                      | relational_expression . LT additive_expression
   59                      | relational_expression . LE additive_expression

    GT  shift, and go to state 69
    GE  shift, and go to state 70
    LT  shift, and go to state 71
    LE  shift, and go to state 72

    $default  reduce using rule 52 (equality_expression)


State 37

   55 relational_expression: additive_expression .
   61 additive_expression: additive_expression . ADD multiplicative_expression
   62                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74

    SUB       [reduce using rule 55 (relational_expression)]
    $default  reduce using rule 55 (relational_expression)


State 38

   60 additive_expression: multiplicative_expression .
   64 multiplicative_expression: multiplicative_expression . MUL unary_expression
   65                          | multiplicative_expression . DIV unary_expression
   66                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 60 (additive_expression)


State 39

   63 multiplicative_expression: unary_expression .

    $default  reduce using rule 63 (multiplicative_expression)


State 40

   45 expression: postfix_expression . ASSIGN expression
   67 unary_expression: postfix_expression .
   70 postfix_expression: postfix_expression . LB expression RB
   71                   | postfix_expression . DOT IDENTIFIER LP argument_list RP
   72                   | postfix_expression . DOT IDENTIFIER LP RP
   73                   | postfix_expression . INCREMENT
   74                   | postfix_expression . DECREMENT
   75                   | postfix_expression . DOT IDENTIFIER ASSIGN function_definition

    LB         shift, and go to state 78
    ASSIGN     shift, and go to state 79
    DOT        shift, and go to state 80
    INCREMENT  shift, and go to state 81
    DECREMENT  shift, and go to state 82

    LB        [reduce using rule 67 (unary_expression)]
    $default  reduce using rule 67 (unary_expression)


State 41

   69 postfix_expression: primary_expression .

    $default  reduce using rule 69 (postfix_expression)


State 42

   88 primary_expression: array_literal .

    $default  reduce using rule 88 (primary_expression)


State 43

   78 primary_expression: IDENTIFIER LP . argument_list RP
   79                   | IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RP              shift, and go to state 83
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 84
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    argument_list              转到状态 85
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 44

    5 function_definition: FUNCTION IDENTIFIER . LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 86


State 45

    7 function_definition: FUNCTION LP . RP block
    8                    | FUNCTION LP . parameter_list RP block

    IDENTIFIER  shift, and go to state 87
    RP          shift, and go to state 88

    parameter_list  转到状态 89


State 46

   23 if_statement: IF LP . expression RP block
   24             | IF LP . expression RP block ELSE block
   25             | IF LP . expression RP block elsif_list
   26             | IF LP . expression RP block elsif_list ELSE block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 90
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 47

   33 while_statement: WHILE LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 91
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 48

   34 for_statement: FOR LP . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    $default  reduce using rule 39 (expression_opt)

    expression_opt             转到状态 92
    expression                 转到状态 50
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 49

   35 return_statement: RETURN_T expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 93


State 50

   40 expression_opt: expression .

    $default  reduce using rule 40 (expression_opt)


State 51

   22 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 22 (break_statement)


State 52

   36 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 36 (continue_statement)


State 53

   80 primary_expression: LP expression . RP

    RP  shift, and go to state 94


State 54

   43 expression_list: expression_list . COMMA expression
   90 array_literal: LC expression_list . COMMA RC

    COMMA  shift, and go to state 95


State 55

   42 expression_list: expression .

    $default  reduce using rule 42 (expression_list)


State 56

   43 expression_list: expression_list . COMMA expression
   89 array_literal: LB expression_list . RB

    RB     shift, and go to state 96
    COMMA  shift, and go to state 97


State 57

   68 unary_expression: SUB unary_expression .

    $default  reduce using rule 68 (unary_expression)


State 58

   67 unary_expression: postfix_expression .
   70 postfix_expression: postfix_expression . LB expression RB
   71                   | postfix_expression . DOT IDENTIFIER LP argument_list RP
   72                   | postfix_expression . DOT IDENTIFIER LP RP
   73                   | postfix_expression . INCREMENT
   74                   | postfix_expression . DECREMENT
   75                   | postfix_expression . DOT IDENTIFIER ASSIGN function_definition

    LB         shift, and go to state 78
    DOT        shift, and go to state 80
    INCREMENT  shift, and go to state 81
    DECREMENT  shift, and go to state 82

    LB        [reduce using rule 67 (unary_expression)]
    $default  reduce using rule 67 (unary_expression)


State 59

   31 identifier_list: IDENTIFIER .

    $default  reduce using rule 31 (identifier_list)


State 60

   30 global_statement: GLOBAL_T identifier_list . SEMICOLON
   32 identifier_list: identifier_list . COMMA IDENTIFIER

    SEMICOLON  shift, and go to state 98
    COMMA      shift, and go to state 99


State 61

   46 expression: VAR postfix_expression . ASSIGN expression
   47           | VAR postfix_expression . SEMICOLON
   70 postfix_expression: postfix_expression . LB expression RB
   71                   | postfix_expression . DOT IDENTIFIER LP argument_list RP
   72                   | postfix_expression . DOT IDENTIFIER LP RP
   73                   | postfix_expression . INCREMENT
   74                   | postfix_expression . DECREMENT
   75                   | postfix_expression . DOT IDENTIFIER ASSIGN function_definition

    LB         shift, and go to state 78
    SEMICOLON  shift, and go to state 100
    ASSIGN     shift, and go to state 101
    DOT        shift, and go to state 80
    INCREMENT  shift, and go to state 81
    DECREMENT  shift, and go to state 82


State 62

    0 $accept: translation_unit $end .

    $default  接受


State 63

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


State 64

   13 statement: expression SEMICOLON .

    $default  reduce using rule 13 (statement)


State 65

   49 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    logical_and_expression     转到状态 102
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 66

   51 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    equality_expression        转到状态 103
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 67

   53 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    relational_expression      转到状态 104
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 68

   54 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    relational_expression      转到状态 105
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 69

   56 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        转到状态 106
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 70

   57 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        转到状态 107
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 71

   58 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        转到状态 108
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 72

   59 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        转到状态 109
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 73

   61 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    multiplicative_expression  转到状态 110
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 74

   62 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    multiplicative_expression  转到状态 111
    unary_expression           转到状态 39
    postfix_expression         转到状态 58
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 75

   64 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    转到状态 112
    postfix_expression  转到状态 58
    primary_expression  转到状态 41
    array_literal       转到状态 42


State 76

   65 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    转到状态 113
    postfix_expression  转到状态 58
    primary_expression  转到状态 41
    array_literal       转到状态 42


State 77

   66 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    转到状态 114
    postfix_expression  转到状态 58
    primary_expression  转到状态 41
    array_literal       转到状态 42


State 78

   70 postfix_expression: postfix_expression LB . expression RB

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 115
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 79

   45 expression: postfix_expression ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 116
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 80

   71 postfix_expression: postfix_expression DOT . IDENTIFIER LP argument_list RP
   72                   | postfix_expression DOT . IDENTIFIER LP RP
   75                   | postfix_expression DOT . IDENTIFIER ASSIGN function_definition

    IDENTIFIER  shift, and go to state 117


State 81

   73 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 73 (postfix_expression)


State 82

   74 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 74 (postfix_expression)


State 83

   79 primary_expression: IDENTIFIER LP RP .

    $default  reduce using rule 79 (primary_expression)


State 84

   76 argument_list: expression .

    $default  reduce using rule 76 (argument_list)


State 85

   77 argument_list: argument_list . COMMA expression
   78 primary_expression: IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 118
    COMMA  shift, and go to state 119


State 86

    5 function_definition: FUNCTION IDENTIFIER LP . parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP . RP block

    IDENTIFIER  shift, and go to state 87
    RP          shift, and go to state 120

    parameter_list  转到状态 121


State 87

   10 parameter_list: IDENTIFIER .

    $default  reduce using rule 10 (parameter_list)


State 88

    7 function_definition: FUNCTION LP RP . block

    LC  shift, and go to state 122

    block  转到状态 123


State 89

    8 function_definition: FUNCTION LP parameter_list . RP block
    9 parameter_list: parameter_list . COMMA IDENTIFIER

    RP     shift, and go to state 124
    COMMA  shift, and go to state 125


State 90

   23 if_statement: IF LP expression . RP block
   24             | IF LP expression . RP block ELSE block
   25             | IF LP expression . RP block elsif_list
   26             | IF LP expression . RP block elsif_list ELSE block

    RP  shift, and go to state 126


State 91

   33 while_statement: WHILE LP expression . RP block

    RP  shift, and go to state 127


State 92

   34 for_statement: FOR LP expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt RP block

    SEMICOLON  shift, and go to state 128


State 93

   35 return_statement: RETURN_T expression_opt SEMICOLON .

    $default  reduce using rule 35 (return_statement)


State 94

   80 primary_expression: LP expression RP .

    $default  reduce using rule 80 (primary_expression)


State 95

   43 expression_list: expression_list COMMA . expression
   90 array_literal: LC expression_list COMMA . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 129
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 130
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 96

   89 array_literal: LB expression_list RB .

    $default  reduce using rule 89 (array_literal)


State 97

   43 expression_list: expression_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 130
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 98

   30 global_statement: GLOBAL_T identifier_list SEMICOLON .

    $default  reduce using rule 30 (global_statement)


State 99

   32 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 131


State 100

   47 expression: VAR postfix_expression SEMICOLON .

    $default  reduce using rule 47 (expression)


State 101

   46 expression: VAR postfix_expression ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 132
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 102

   49 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   51 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 66

    $default  reduce using rule 49 (logical_or_expression)


State 103

   51 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   53 equality_expression: equality_expression . EQ relational_expression
   54                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 67
    NE  shift, and go to state 68

    $default  reduce using rule 51 (logical_and_expression)


State 104

   53 equality_expression: equality_expression EQ relational_expression .
   56 relational_expression: relational_expression . GT additive_expression
   57                      | relational_expression . GE additive_expression
   58                      | relational_expression . LT additive_expression
   59                      | relational_expression . LE additive_expression

    GT  shift, and go to state 69
    GE  shift, and go to state 70
    LT  shift, and go to state 71
    LE  shift, and go to state 72

    $default  reduce using rule 53 (equality_expression)


State 105

   54 equality_expression: equality_expression NE relational_expression .
   56 relational_expression: relational_expression . GT additive_expression
   57                      | relational_expression . GE additive_expression
   58                      | relational_expression . LT additive_expression
   59                      | relational_expression . LE additive_expression

    GT  shift, and go to state 69
    GE  shift, and go to state 70
    LT  shift, and go to state 71
    LE  shift, and go to state 72

    $default  reduce using rule 54 (equality_expression)


State 106

   56 relational_expression: relational_expression GT additive_expression .
   61 additive_expression: additive_expression . ADD multiplicative_expression
   62                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74

    SUB       [reduce using rule 56 (relational_expression)]
    $default  reduce using rule 56 (relational_expression)


State 107

   57 relational_expression: relational_expression GE additive_expression .
   61 additive_expression: additive_expression . ADD multiplicative_expression
   62                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74

    SUB       [reduce using rule 57 (relational_expression)]
    $default  reduce using rule 57 (relational_expression)


State 108

   58 relational_expression: relational_expression LT additive_expression .
   61 additive_expression: additive_expression . ADD multiplicative_expression
   62                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74

    SUB       [reduce using rule 58 (relational_expression)]
    $default  reduce using rule 58 (relational_expression)


State 109

   59 relational_expression: relational_expression LE additive_expression .
   61 additive_expression: additive_expression . ADD multiplicative_expression
   62                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74

    SUB       [reduce using rule 59 (relational_expression)]
    $default  reduce using rule 59 (relational_expression)


State 110

   61 additive_expression: additive_expression ADD multiplicative_expression .
   64 multiplicative_expression: multiplicative_expression . MUL unary_expression
   65                          | multiplicative_expression . DIV unary_expression
   66                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 61 (additive_expression)


State 111

   62 additive_expression: additive_expression SUB multiplicative_expression .
   64 multiplicative_expression: multiplicative_expression . MUL unary_expression
   65                          | multiplicative_expression . DIV unary_expression
   66                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 62 (additive_expression)


State 112

   64 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 64 (multiplicative_expression)


State 113

   65 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 65 (multiplicative_expression)


State 114

   66 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 66 (multiplicative_expression)


State 115

   70 postfix_expression: postfix_expression LB expression . RB

    RB  shift, and go to state 133


State 116

   45 expression: postfix_expression ASSIGN expression .

    $default  reduce using rule 45 (expression)


State 117

   71 postfix_expression: postfix_expression DOT IDENTIFIER . LP argument_list RP
   72                   | postfix_expression DOT IDENTIFIER . LP RP
   75                   | postfix_expression DOT IDENTIFIER . ASSIGN function_definition

    LP      shift, and go to state 134
    ASSIGN  shift, and go to state 135


State 118

   78 primary_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 78 (primary_expression)


State 119

   77 argument_list: argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 136
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 120

    6 function_definition: FUNCTION IDENTIFIER LP RP . block

    LC  shift, and go to state 122

    block  转到状态 137


State 121

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list . RP block
    9 parameter_list: parameter_list . COMMA IDENTIFIER

    RP     shift, and go to state 138
    COMMA  shift, and go to state 125


State 122

   37 block: LC . statement_list RC
   38      | LC . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 139
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    VAR             shift, and go to state 20

    statement_list             转到状态 140
    statement                  转到状态 141
    break_statement            转到状态 25
    if_statement               转到状态 26
    global_statement           转到状态 27
    while_statement            转到状态 28
    for_statement              转到状态 29
    return_statement           转到状态 30
    continue_statement         转到状态 31
    expression                 转到状态 32
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 123

    7 function_definition: FUNCTION LP RP block .

    $default  reduce using rule 7 (function_definition)


State 124

    8 function_definition: FUNCTION LP parameter_list RP . block

    LC  shift, and go to state 122

    block  转到状态 142


State 125

    9 parameter_list: parameter_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 143


State 126

   23 if_statement: IF LP expression RP . block
   24             | IF LP expression RP . block ELSE block
   25             | IF LP expression RP . block elsif_list
   26             | IF LP expression RP . block elsif_list ELSE block

    LC  shift, and go to state 122

    block  转到状态 144


State 127

   33 while_statement: WHILE LP expression RP . block

    LC  shift, and go to state 122

    block  转到状态 145


State 128

   34 for_statement: FOR LP expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    $default  reduce using rule 39 (expression_opt)

    expression_opt             转到状态 146
    expression                 转到状态 50
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 129

   90 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 90 (array_literal)


State 130

   43 expression_list: expression_list COMMA expression .

    $default  reduce using rule 43 (expression_list)


State 131

   32 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 32 (identifier_list)


State 132

   46 expression: VAR postfix_expression ASSIGN expression .

    $default  reduce using rule 46 (expression)


State 133

   70 postfix_expression: postfix_expression LB expression RB .

    $default  reduce using rule 70 (postfix_expression)


State 134

   71 postfix_expression: postfix_expression DOT IDENTIFIER LP . argument_list RP
   72                   | postfix_expression DOT IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RP              shift, and go to state 147
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 84
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    argument_list              转到状态 148
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 135

   75 postfix_expression: postfix_expression DOT IDENTIFIER ASSIGN . function_definition

    FUNCTION  shift, and go to state 5

    function_definition  转到状态 149


State 136

   77 argument_list: argument_list COMMA expression .

    $default  reduce using rule 77 (argument_list)


State 137

    6 function_definition: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 6 (function_definition)


State 138

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 122

    block  转到状态 150


State 139

   38 block: LC RC .

    $default  reduce using rule 38 (block)


State 140

   12 statement_list: statement_list . statement
   37 block: LC statement_list . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 151
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    VAR             shift, and go to state 20

    statement                  转到状态 152
    break_statement            转到状态 25
    if_statement               转到状态 26
    global_statement           转到状态 27
    while_statement            转到状态 28
    for_statement              转到状态 29
    return_statement           转到状态 30
    continue_statement         转到状态 31
    expression                 转到状态 32
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 141

   11 statement_list: statement .

    $default  reduce using rule 11 (statement_list)


State 142

    8 function_definition: FUNCTION LP parameter_list RP block .

    $default  reduce using rule 8 (function_definition)


State 143

    9 parameter_list: parameter_list COMMA IDENTIFIER .

    $default  reduce using rule 9 (parameter_list)


State 144

   23 if_statement: IF LP expression RP block .
   24             | IF LP expression RP block . ELSE block
   25             | IF LP expression RP block . elsif_list
   26             | IF LP expression RP block . elsif_list ELSE block

    ELSE   shift, and go to state 153
    ELSIF  shift, and go to state 154

    $default  reduce using rule 23 (if_statement)

    elsif_list  转到状态 155
    elsif       转到状态 156


State 145

   33 while_statement: WHILE LP expression RP block .

    $default  reduce using rule 33 (while_statement)


State 146

   34 for_statement: FOR LP expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt RP block

    SEMICOLON  shift, and go to state 157


State 147

   72 postfix_expression: postfix_expression DOT IDENTIFIER LP RP .

    $default  reduce using rule 72 (postfix_expression)


State 148

   71 postfix_expression: postfix_expression DOT IDENTIFIER LP argument_list . RP
   77 argument_list: argument_list . COMMA expression

    RP     shift, and go to state 158
    COMMA  shift, and go to state 119


State 149

   75 postfix_expression: postfix_expression DOT IDENTIFIER ASSIGN function_definition .

    $default  reduce using rule 75 (postfix_expression)


State 150

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 5 (function_definition)


State 151

   37 block: LC statement_list RC .

    $default  reduce using rule 37 (block)


State 152

   12 statement_list: statement_list statement .

    $default  reduce using rule 12 (statement_list)


State 153

   24 if_statement: IF LP expression RP block ELSE . block

    LC  shift, and go to state 122

    block  转到状态 159


State 154

   29 elsif: ELSIF . LP expression RP block

    LP  shift, and go to state 160


State 155

   25 if_statement: IF LP expression RP block elsif_list .
   26             | IF LP expression RP block elsif_list . ELSE block
   28 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 161
    ELSIF  shift, and go to state 154

    $default  reduce using rule 25 (if_statement)

    elsif  转到状态 162


State 156

   27 elsif_list: elsif .

    $default  reduce using rule 27 (elsif_list)


State 157

   34 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    $default  reduce using rule 39 (expression_opt)

    expression_opt             转到状态 163
    expression                 转到状态 50
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 158

   71 postfix_expression: postfix_expression DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 71 (postfix_expression)


State 159

   24 if_statement: IF LP expression RP block ELSE block .

    $default  reduce using rule 24 (if_statement)


State 160

   29 elsif: ELSIF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 20

    expression                 转到状态 164
    logical_or_expression      转到状态 33
    logical_and_expression     转到状态 34
    equality_expression        转到状态 35
    relational_expression      转到状态 36
    additive_expression        转到状态 37
    multiplicative_expression  转到状态 38
    unary_expression           转到状态 39
    postfix_expression         转到状态 40
    primary_expression         转到状态 41
    array_literal              转到状态 42


State 161

   26 if_statement: IF LP expression RP block elsif_list ELSE . block

    LC  shift, and go to state 122

    block  转到状态 165


State 162

   28 elsif_list: elsif_list elsif .

    $default  reduce using rule 28 (elsif_list)


State 163

   34 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . RP block

    RP  shift, and go to state 166


State 164

   29 elsif: ELSIF LP expression . RP block

    RP  shift, and go to state 167


State 165

   26 if_statement: IF LP expression RP block elsif_list ELSE block .

    $default  reduce using rule 26 (if_statement)


State 166

   34 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP . block

    LC  shift, and go to state 122

    block  转到状态 168


State 167

   29 elsif: ELSIF LP expression RP . block

    LC  shift, and go to state 122

    block  转到状态 169


State 168

   34 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block .

    $default  reduce using rule 34 (for_statement)


State 169

   29 elsif: ELSIF LP expression RP block .

    $default  reduce using rule 29 (elsif)
