Terminals unused in grammar

   CRLF


状态 4conflicts: 1 shift/reduce
状态 35conflicts: 1 shift/reduce
状态 38conflicts: 1 shift/reduce
状态 56conflicts: 1 shift/reduce
状态 100conflicts: 1 shift/reduce
状态 101conflicts: 1 shift/reduce
状态 102conflicts: 1 shift/reduce
状态 103conflicts: 1 shift/reduce


语法

    0 $accept: translation_unit $end

    1 translation_unit: definition_or_statement
    2                 | translation_unit definition_or_statement

    3 definition_or_statement: function_definition
    4                        | statement

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP RP block
    7                    | FUNCTION LP RP block
    8                    | FUNCTION LP parameter_list RP block

    9 parameter_list: parameter_list COMMA IDENTIFIER
   10               | IDENTIFIER

   11 statement_list: statement
   12               | statement_list statement

   13 statement: expression SEMICOLON
   14          | expression
   15          | if_statement
   16          | while_statement
   17          | for_statement
   18          | return_statement
   19          | continue_statement
   20          | break_statement

   21 break_statement: BREAK SEMICOLON

   22 if_statement: IF LP expression RP block
   23             | IF LP expression RP block ELSE block
   24             | IF LP expression RP block elsif_list
   25             | IF LP expression RP block elsif_list ELSE block

   26 elsif_list: elsif
   27           | elsif_list elsif

   28 elsif: ELSIF LP expression RP block

   29 while_statement: WHILE LP expression RP block

   30 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

   31 return_statement: RETURN_T expression_opt SEMICOLON

   32 continue_statement: CONTINUE SEMICOLON

   33 block: LC statement_list RC
   34      | LC RC

   35 expression_opt: %empty
   36               | expression

   37 expression_list: %empty
   38                | expression
   39                | expression_list COMMA expression

   40 expression: logical_or_expression
   41           | postfix_expression ASSIGN expression
   42           | VAR postfix_expression ASSIGN expression
   43           | VAR postfix_expression SEMICOLON

   44 logical_or_expression: logical_and_expression
   45                      | logical_or_expression LOGICAL_OR logical_and_expression

   46 logical_and_expression: equality_expression
   47                       | logical_and_expression LOGICAL_AND equality_expression

   48 equality_expression: relational_expression
   49                    | equality_expression EQ relational_expression
   50                    | equality_expression NE relational_expression

   51 relational_expression: additive_expression
   52                      | relational_expression GT additive_expression
   53                      | relational_expression GE additive_expression
   54                      | relational_expression LT additive_expression
   55                      | relational_expression LE additive_expression

   56 additive_expression: multiplicative_expression
   57                    | additive_expression ADD multiplicative_expression
   58                    | additive_expression SUB multiplicative_expression

   59 multiplicative_expression: unary_expression
   60                          | multiplicative_expression MUL unary_expression
   61                          | multiplicative_expression DIV unary_expression
   62                          | multiplicative_expression MOD unary_expression

   63 unary_expression: postfix_expression
   64                 | SUB unary_expression

   65 postfix_expression: primary_expression
   66                   | postfix_expression LB expression RB
   67                   | postfix_expression DOT IDENTIFIER LP argument_list RP
   68                   | postfix_expression DOT IDENTIFIER LP RP
   69                   | postfix_expression INCREMENT
   70                   | postfix_expression DECREMENT
   71                   | postfix_expression DOT IDENTIFIER ASSIGN function_definition

   72 argument_list: expression
   73              | argument_list COMMA expression

   74 primary_expression: IDENTIFIER LP argument_list RP
   75                   | IDENTIFIER LP RP
   76                   | LP expression RP
   77                   | IDENTIFIER
   78                   | INT_LITERAL
   79                   | DOUBLE_LITERAL
   80                   | STRING_LITERAL
   81                   | TRUE_T
   82                   | FALSE_T
   83                   | NULL_T
   84                   | array_literal

   85 array_literal: LB expression_list RB
   86              | LC expression_list COMMA RC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 78
DOUBLE_LITERAL (259) 79
STRING_LITERAL (260) 80
IDENTIFIER (261) 5 6 9 10 67 68 71 74 75 77
FUNCTION (262) 5 6 7 8
IF (263) 22 23 24 25
ELSE (264) 23 25
ELSIF (265) 28
WHILE (266) 29
FOR (267) 30
RETURN_T (268) 31
BREAK (269) 21
CONTINUE (270) 32
NULL_T (271) 83
CRLF (272)
LP (273) 5 6 7 8 22 23 24 25 28 29 30 67 68 74 75 76
RP (274) 5 6 7 8 22 23 24 25 28 29 30 67 68 74 75 76
LC (275) 33 34 86
RC (276) 33 34 86
LB (277) 66 85
RB (278) 66 85
SEMICOLON (279) 13 21 30 31 32 43
COMMA (280) 9 39 73 86
ASSIGN (281) 41 42 71
LOGICAL_AND (282) 47
LOGICAL_OR (283) 45
EQ (284) 49
NE (285) 50
GT (286) 52
GE (287) 53
LT (288) 54
LE (289) 55
ADD (290) 57
SUB (291) 58 64
MUL (292) 60
DIV (293) 61
MOD (294) 62
TRUE_T (295) 81
FALSE_T (296) 82
DOT (297) 67 68 71
VAR (298) 42 43
INCREMENT (299) 69
DECREMENT (300) 70


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
translation_unit (47)
    on left: 1 2, on right: 0 2
definition_or_statement (48)
    on left: 3 4, on right: 1 2
function_definition (49)
    on left: 5 6 7 8, on right: 3 71
parameter_list (50)
    on left: 9 10, on right: 5 8 9
statement_list (51)
    on left: 11 12, on right: 12 33
statement (52)
    on left: 13 14 15 16 17 18 19 20, on right: 4 11 12
break_statement (53)
    on left: 21, on right: 20
if_statement (54)
    on left: 22 23 24 25, on right: 15
elsif_list (55)
    on left: 26 27, on right: 24 25 27
elsif (56)
    on left: 28, on right: 26 27
while_statement (57)
    on left: 29, on right: 16
for_statement (58)
    on left: 30, on right: 17
return_statement (59)
    on left: 31, on right: 18
continue_statement (60)
    on left: 32, on right: 19
block (61)
    on left: 33 34, on right: 5 6 7 8 22 23 24 25 28 29 30
expression_opt (62)
    on left: 35 36, on right: 30 31
expression_list (63)
    on left: 37 38 39, on right: 39 85 86
expression (64)
    on left: 40 41 42 43, on right: 13 14 22 23 24 25 28 29 36 38 39
    41 42 66 72 73 76
logical_or_expression (65)
    on left: 44 45, on right: 40 45
logical_and_expression (66)
    on left: 46 47, on right: 44 45 47
equality_expression (67)
    on left: 48 49 50, on right: 46 47 49 50
relational_expression (68)
    on left: 51 52 53 54 55, on right: 48 49 50 52 53 54 55
additive_expression (69)
    on left: 56 57 58, on right: 51 52 53 54 55 57 58
multiplicative_expression (70)
    on left: 59 60 61 62, on right: 56 57 58 60 61 62
unary_expression (71)
    on left: 63 64, on right: 59 60 61 62 64
postfix_expression (72)
    on left: 65 66 67 68 69 70 71, on right: 41 42 43 63 66 67 68 69
    70 71
argument_list (73)
    on left: 72 73, on right: 67 73 74
primary_expression (74)
    on left: 74 75 76 77 78 79 80 81 82 83 84, on right: 65
array_literal (75)
    on left: 85 86, on right: 84


State 0

    0 $accept: . translation_unit $end

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    translation_unit           转到状态 20
    definition_or_statement    转到状态 21
    function_definition        转到状态 22
    statement                  转到状态 23
    break_statement            转到状态 24
    if_statement               转到状态 25
    while_statement            转到状态 26
    for_statement              转到状态 27
    return_statement           转到状态 28
    continue_statement         转到状态 29
    expression                 转到状态 30
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 1

   78 primary_expression: INT_LITERAL .

    $default  reduce using rule 78 (primary_expression)


State 2

   79 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 79 (primary_expression)


State 3

   80 primary_expression: STRING_LITERAL .

    $default  reduce using rule 80 (primary_expression)


State 4

   74 primary_expression: IDENTIFIER . LP argument_list RP
   75                   | IDENTIFIER . LP RP
   77                   | IDENTIFIER .

    LP  shift, and go to state 41

    LP        [reduce using rule 77 (primary_expression)]
    $default  reduce using rule 77 (primary_expression)


State 5

    5 function_definition: FUNCTION . IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION . IDENTIFIER LP RP block
    7                    | FUNCTION . LP RP block
    8                    | FUNCTION . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 42
    LP          shift, and go to state 43


State 6

   22 if_statement: IF . LP expression RP block
   23             | IF . LP expression RP block ELSE block
   24             | IF . LP expression RP block elsif_list
   25             | IF . LP expression RP block elsif_list ELSE block

    LP  shift, and go to state 44


State 7

   29 while_statement: WHILE . LP expression RP block

    LP  shift, and go to state 45


State 8

   30 for_statement: FOR . LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

    LP  shift, and go to state 46


State 9

   31 return_statement: RETURN_T . expression_opt SEMICOLON

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    $default  reduce using rule 35 (expression_opt)

    expression_opt             转到状态 47
    expression                 转到状态 48
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 10

   21 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 11

   32 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 12

   83 primary_expression: NULL_T .

    $default  reduce using rule 83 (primary_expression)


State 13

   76 primary_expression: LP . expression RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 51
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 14

   86 array_literal: LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    $default  reduce using rule 37 (expression_list)

    expression_list            转到状态 52
    expression                 转到状态 53
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 15

   85 array_literal: LB . expression_list RB

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    $default  reduce using rule 37 (expression_list)

    expression_list            转到状态 54
    expression                 转到状态 53
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 16

   64 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    转到状态 55
    postfix_expression  转到状态 56
    primary_expression  转到状态 39
    array_literal       转到状态 40


State 17

   81 primary_expression: TRUE_T .

    $default  reduce using rule 81 (primary_expression)


State 18

   82 primary_expression: FALSE_T .

    $default  reduce using rule 82 (primary_expression)


State 19

   42 expression: VAR . postfix_expression ASSIGN expression
   43           | VAR . postfix_expression SEMICOLON

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    postfix_expression  转到状态 57
    primary_expression  转到状态 39
    array_literal       转到状态 40


State 20

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 58
    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    definition_or_statement    转到状态 59
    function_definition        转到状态 22
    statement                  转到状态 23
    break_statement            转到状态 24
    if_statement               转到状态 25
    while_statement            转到状态 26
    for_statement              转到状态 27
    return_statement           转到状态 28
    continue_statement         转到状态 29
    expression                 转到状态 30
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 21

    1 translation_unit: definition_or_statement .

    $default  reduce using rule 1 (translation_unit)


State 22

    3 definition_or_statement: function_definition .

    $default  reduce using rule 3 (definition_or_statement)


State 23

    4 definition_or_statement: statement .

    $default  reduce using rule 4 (definition_or_statement)


State 24

   20 statement: break_statement .

    $default  reduce using rule 20 (statement)


State 25

   15 statement: if_statement .

    $default  reduce using rule 15 (statement)


State 26

   16 statement: while_statement .

    $default  reduce using rule 16 (statement)


State 27

   17 statement: for_statement .

    $default  reduce using rule 17 (statement)


State 28

   18 statement: return_statement .

    $default  reduce using rule 18 (statement)


State 29

   19 statement: continue_statement .

    $default  reduce using rule 19 (statement)


State 30

   13 statement: expression . SEMICOLON
   14          | expression .

    SEMICOLON  shift, and go to state 60

    $default  reduce using rule 14 (statement)


State 31

   40 expression: logical_or_expression .
   45 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 61

    $default  reduce using rule 40 (expression)


State 32

   44 logical_or_expression: logical_and_expression .
   47 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 62

    $default  reduce using rule 44 (logical_or_expression)


State 33

   46 logical_and_expression: equality_expression .
   49 equality_expression: equality_expression . EQ relational_expression
   50                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 63
    NE  shift, and go to state 64

    $default  reduce using rule 46 (logical_and_expression)


State 34

   48 equality_expression: relational_expression .
   52 relational_expression: relational_expression . GT additive_expression
   53                      | relational_expression . GE additive_expression
   54                      | relational_expression . LT additive_expression
   55                      | relational_expression . LE additive_expression

    GT  shift, and go to state 65
    GE  shift, and go to state 66
    LT  shift, and go to state 67
    LE  shift, and go to state 68

    $default  reduce using rule 48 (equality_expression)


State 35

   51 relational_expression: additive_expression .
   57 additive_expression: additive_expression . ADD multiplicative_expression
   58                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70

    SUB       [reduce using rule 51 (relational_expression)]
    $default  reduce using rule 51 (relational_expression)


State 36

   56 additive_expression: multiplicative_expression .
   60 multiplicative_expression: multiplicative_expression . MUL unary_expression
   61                          | multiplicative_expression . DIV unary_expression
   62                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    $default  reduce using rule 56 (additive_expression)


State 37

   59 multiplicative_expression: unary_expression .

    $default  reduce using rule 59 (multiplicative_expression)


State 38

   41 expression: postfix_expression . ASSIGN expression
   63 unary_expression: postfix_expression .
   66 postfix_expression: postfix_expression . LB expression RB
   67                   | postfix_expression . DOT IDENTIFIER LP argument_list RP
   68                   | postfix_expression . DOT IDENTIFIER LP RP
   69                   | postfix_expression . INCREMENT
   70                   | postfix_expression . DECREMENT
   71                   | postfix_expression . DOT IDENTIFIER ASSIGN function_definition

    LB         shift, and go to state 74
    ASSIGN     shift, and go to state 75
    DOT        shift, and go to state 76
    INCREMENT  shift, and go to state 77
    DECREMENT  shift, and go to state 78

    LB        [reduce using rule 63 (unary_expression)]
    $default  reduce using rule 63 (unary_expression)


State 39

   65 postfix_expression: primary_expression .

    $default  reduce using rule 65 (postfix_expression)


State 40

   84 primary_expression: array_literal .

    $default  reduce using rule 84 (primary_expression)


State 41

   74 primary_expression: IDENTIFIER LP . argument_list RP
   75                   | IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RP              shift, and go to state 79
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 80
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    argument_list              转到状态 81
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 42

    5 function_definition: FUNCTION IDENTIFIER . LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 82


State 43

    7 function_definition: FUNCTION LP . RP block
    8                    | FUNCTION LP . parameter_list RP block

    IDENTIFIER  shift, and go to state 83
    RP          shift, and go to state 84

    parameter_list  转到状态 85


State 44

   22 if_statement: IF LP . expression RP block
   23             | IF LP . expression RP block ELSE block
   24             | IF LP . expression RP block elsif_list
   25             | IF LP . expression RP block elsif_list ELSE block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 86
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 45

   29 while_statement: WHILE LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 87
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 46

   30 for_statement: FOR LP . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    $default  reduce using rule 35 (expression_opt)

    expression_opt             转到状态 88
    expression                 转到状态 48
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 47

   31 return_statement: RETURN_T expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 48

   36 expression_opt: expression .

    $default  reduce using rule 36 (expression_opt)


State 49

   21 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 21 (break_statement)


State 50

   32 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 32 (continue_statement)


State 51

   76 primary_expression: LP expression . RP

    RP  shift, and go to state 90


State 52

   39 expression_list: expression_list . COMMA expression
   86 array_literal: LC expression_list . COMMA RC

    COMMA  shift, and go to state 91


State 53

   38 expression_list: expression .

    $default  reduce using rule 38 (expression_list)


State 54

   39 expression_list: expression_list . COMMA expression
   85 array_literal: LB expression_list . RB

    RB     shift, and go to state 92
    COMMA  shift, and go to state 93


State 55

   64 unary_expression: SUB unary_expression .

    $default  reduce using rule 64 (unary_expression)


State 56

   63 unary_expression: postfix_expression .
   66 postfix_expression: postfix_expression . LB expression RB
   67                   | postfix_expression . DOT IDENTIFIER LP argument_list RP
   68                   | postfix_expression . DOT IDENTIFIER LP RP
   69                   | postfix_expression . INCREMENT
   70                   | postfix_expression . DECREMENT
   71                   | postfix_expression . DOT IDENTIFIER ASSIGN function_definition

    LB         shift, and go to state 74
    DOT        shift, and go to state 76
    INCREMENT  shift, and go to state 77
    DECREMENT  shift, and go to state 78

    LB        [reduce using rule 63 (unary_expression)]
    $default  reduce using rule 63 (unary_expression)


State 57

   42 expression: VAR postfix_expression . ASSIGN expression
   43           | VAR postfix_expression . SEMICOLON
   66 postfix_expression: postfix_expression . LB expression RB
   67                   | postfix_expression . DOT IDENTIFIER LP argument_list RP
   68                   | postfix_expression . DOT IDENTIFIER LP RP
   69                   | postfix_expression . INCREMENT
   70                   | postfix_expression . DECREMENT
   71                   | postfix_expression . DOT IDENTIFIER ASSIGN function_definition

    LB         shift, and go to state 74
    SEMICOLON  shift, and go to state 94
    ASSIGN     shift, and go to state 95
    DOT        shift, and go to state 76
    INCREMENT  shift, and go to state 77
    DECREMENT  shift, and go to state 78


State 58

    0 $accept: translation_unit $end .

    $default  接受


State 59

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


State 60

   13 statement: expression SEMICOLON .

    $default  reduce using rule 13 (statement)


State 61

   45 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    logical_and_expression     转到状态 96
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 62

   47 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    equality_expression        转到状态 97
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 63

   49 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    relational_expression      转到状态 98
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 64

   50 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    relational_expression      转到状态 99
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 65

   52 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        转到状态 100
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 66

   53 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        转到状态 101
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 67

   54 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        转到状态 102
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 68

   55 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        转到状态 103
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 69

   57 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    multiplicative_expression  转到状态 104
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 70

   58 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    multiplicative_expression  转到状态 105
    unary_expression           转到状态 37
    postfix_expression         转到状态 56
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 71

   60 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    转到状态 106
    postfix_expression  转到状态 56
    primary_expression  转到状态 39
    array_literal       转到状态 40


State 72

   61 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    转到状态 107
    postfix_expression  转到状态 56
    primary_expression  转到状态 39
    array_literal       转到状态 40


State 73

   62 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    转到状态 108
    postfix_expression  转到状态 56
    primary_expression  转到状态 39
    array_literal       转到状态 40


State 74

   66 postfix_expression: postfix_expression LB . expression RB

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 109
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 75

   41 expression: postfix_expression ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 110
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 76

   67 postfix_expression: postfix_expression DOT . IDENTIFIER LP argument_list RP
   68                   | postfix_expression DOT . IDENTIFIER LP RP
   71                   | postfix_expression DOT . IDENTIFIER ASSIGN function_definition

    IDENTIFIER  shift, and go to state 111


State 77

   69 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 69 (postfix_expression)


State 78

   70 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 70 (postfix_expression)


State 79

   75 primary_expression: IDENTIFIER LP RP .

    $default  reduce using rule 75 (primary_expression)


State 80

   72 argument_list: expression .

    $default  reduce using rule 72 (argument_list)


State 81

   73 argument_list: argument_list . COMMA expression
   74 primary_expression: IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 112
    COMMA  shift, and go to state 113


State 82

    5 function_definition: FUNCTION IDENTIFIER LP . parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP . RP block

    IDENTIFIER  shift, and go to state 83
    RP          shift, and go to state 114

    parameter_list  转到状态 115


State 83

   10 parameter_list: IDENTIFIER .

    $default  reduce using rule 10 (parameter_list)


State 84

    7 function_definition: FUNCTION LP RP . block

    LC  shift, and go to state 116

    block  转到状态 117


State 85

    8 function_definition: FUNCTION LP parameter_list . RP block
    9 parameter_list: parameter_list . COMMA IDENTIFIER

    RP     shift, and go to state 118
    COMMA  shift, and go to state 119


State 86

   22 if_statement: IF LP expression . RP block
   23             | IF LP expression . RP block ELSE block
   24             | IF LP expression . RP block elsif_list
   25             | IF LP expression . RP block elsif_list ELSE block

    RP  shift, and go to state 120


State 87

   29 while_statement: WHILE LP expression . RP block

    RP  shift, and go to state 121


State 88

   30 for_statement: FOR LP expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt RP block

    SEMICOLON  shift, and go to state 122


State 89

   31 return_statement: RETURN_T expression_opt SEMICOLON .

    $default  reduce using rule 31 (return_statement)


State 90

   76 primary_expression: LP expression RP .

    $default  reduce using rule 76 (primary_expression)


State 91

   39 expression_list: expression_list COMMA . expression
   86 array_literal: LC expression_list COMMA . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 123
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 124
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 92

   85 array_literal: LB expression_list RB .

    $default  reduce using rule 85 (array_literal)


State 93

   39 expression_list: expression_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 124
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 94

   43 expression: VAR postfix_expression SEMICOLON .

    $default  reduce using rule 43 (expression)


State 95

   42 expression: VAR postfix_expression ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 125
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 96

   45 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   47 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 62

    $default  reduce using rule 45 (logical_or_expression)


State 97

   47 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   49 equality_expression: equality_expression . EQ relational_expression
   50                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 63
    NE  shift, and go to state 64

    $default  reduce using rule 47 (logical_and_expression)


State 98

   49 equality_expression: equality_expression EQ relational_expression .
   52 relational_expression: relational_expression . GT additive_expression
   53                      | relational_expression . GE additive_expression
   54                      | relational_expression . LT additive_expression
   55                      | relational_expression . LE additive_expression

    GT  shift, and go to state 65
    GE  shift, and go to state 66
    LT  shift, and go to state 67
    LE  shift, and go to state 68

    $default  reduce using rule 49 (equality_expression)


State 99

   50 equality_expression: equality_expression NE relational_expression .
   52 relational_expression: relational_expression . GT additive_expression
   53                      | relational_expression . GE additive_expression
   54                      | relational_expression . LT additive_expression
   55                      | relational_expression . LE additive_expression

    GT  shift, and go to state 65
    GE  shift, and go to state 66
    LT  shift, and go to state 67
    LE  shift, and go to state 68

    $default  reduce using rule 50 (equality_expression)


State 100

   52 relational_expression: relational_expression GT additive_expression .
   57 additive_expression: additive_expression . ADD multiplicative_expression
   58                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70

    SUB       [reduce using rule 52 (relational_expression)]
    $default  reduce using rule 52 (relational_expression)


State 101

   53 relational_expression: relational_expression GE additive_expression .
   57 additive_expression: additive_expression . ADD multiplicative_expression
   58                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70

    SUB       [reduce using rule 53 (relational_expression)]
    $default  reduce using rule 53 (relational_expression)


State 102

   54 relational_expression: relational_expression LT additive_expression .
   57 additive_expression: additive_expression . ADD multiplicative_expression
   58                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70

    SUB       [reduce using rule 54 (relational_expression)]
    $default  reduce using rule 54 (relational_expression)


State 103

   55 relational_expression: relational_expression LE additive_expression .
   57 additive_expression: additive_expression . ADD multiplicative_expression
   58                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70

    SUB       [reduce using rule 55 (relational_expression)]
    $default  reduce using rule 55 (relational_expression)


State 104

   57 additive_expression: additive_expression ADD multiplicative_expression .
   60 multiplicative_expression: multiplicative_expression . MUL unary_expression
   61                          | multiplicative_expression . DIV unary_expression
   62                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    $default  reduce using rule 57 (additive_expression)


State 105

   58 additive_expression: additive_expression SUB multiplicative_expression .
   60 multiplicative_expression: multiplicative_expression . MUL unary_expression
   61                          | multiplicative_expression . DIV unary_expression
   62                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    $default  reduce using rule 58 (additive_expression)


State 106

   60 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 60 (multiplicative_expression)


State 107

   61 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 61 (multiplicative_expression)


State 108

   62 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 62 (multiplicative_expression)


State 109

   66 postfix_expression: postfix_expression LB expression . RB

    RB  shift, and go to state 126


State 110

   41 expression: postfix_expression ASSIGN expression .

    $default  reduce using rule 41 (expression)


State 111

   67 postfix_expression: postfix_expression DOT IDENTIFIER . LP argument_list RP
   68                   | postfix_expression DOT IDENTIFIER . LP RP
   71                   | postfix_expression DOT IDENTIFIER . ASSIGN function_definition

    LP      shift, and go to state 127
    ASSIGN  shift, and go to state 128


State 112

   74 primary_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 74 (primary_expression)


State 113

   73 argument_list: argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 129
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 114

    6 function_definition: FUNCTION IDENTIFIER LP RP . block

    LC  shift, and go to state 116

    block  转到状态 130


State 115

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list . RP block
    9 parameter_list: parameter_list . COMMA IDENTIFIER

    RP     shift, and go to state 131
    COMMA  shift, and go to state 119


State 116

   33 block: LC . statement_list RC
   34      | LC . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 132
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    statement_list             转到状态 133
    statement                  转到状态 134
    break_statement            转到状态 24
    if_statement               转到状态 25
    while_statement            转到状态 26
    for_statement              转到状态 27
    return_statement           转到状态 28
    continue_statement         转到状态 29
    expression                 转到状态 30
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 117

    7 function_definition: FUNCTION LP RP block .

    $default  reduce using rule 7 (function_definition)


State 118

    8 function_definition: FUNCTION LP parameter_list RP . block

    LC  shift, and go to state 116

    block  转到状态 135


State 119

    9 parameter_list: parameter_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 136


State 120

   22 if_statement: IF LP expression RP . block
   23             | IF LP expression RP . block ELSE block
   24             | IF LP expression RP . block elsif_list
   25             | IF LP expression RP . block elsif_list ELSE block

    LC  shift, and go to state 116

    block  转到状态 137


State 121

   29 while_statement: WHILE LP expression RP . block

    LC  shift, and go to state 116

    block  转到状态 138


State 122

   30 for_statement: FOR LP expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    $default  reduce using rule 35 (expression_opt)

    expression_opt             转到状态 139
    expression                 转到状态 48
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 123

   86 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 86 (array_literal)


State 124

   39 expression_list: expression_list COMMA expression .

    $default  reduce using rule 39 (expression_list)


State 125

   42 expression: VAR postfix_expression ASSIGN expression .

    $default  reduce using rule 42 (expression)


State 126

   66 postfix_expression: postfix_expression LB expression RB .

    $default  reduce using rule 66 (postfix_expression)


State 127

   67 postfix_expression: postfix_expression DOT IDENTIFIER LP . argument_list RP
   68                   | postfix_expression DOT IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RP              shift, and go to state 140
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 80
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    argument_list              转到状态 141
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 128

   71 postfix_expression: postfix_expression DOT IDENTIFIER ASSIGN . function_definition

    FUNCTION  shift, and go to state 5

    function_definition  转到状态 142


State 129

   73 argument_list: argument_list COMMA expression .

    $default  reduce using rule 73 (argument_list)


State 130

    6 function_definition: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 6 (function_definition)


State 131

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 116

    block  转到状态 143


State 132

   34 block: LC RC .

    $default  reduce using rule 34 (block)


State 133

   12 statement_list: statement_list . statement
   33 block: LC statement_list . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 144
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    statement                  转到状态 145
    break_statement            转到状态 24
    if_statement               转到状态 25
    while_statement            转到状态 26
    for_statement              转到状态 27
    return_statement           转到状态 28
    continue_statement         转到状态 29
    expression                 转到状态 30
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 134

   11 statement_list: statement .

    $default  reduce using rule 11 (statement_list)


State 135

    8 function_definition: FUNCTION LP parameter_list RP block .

    $default  reduce using rule 8 (function_definition)


State 136

    9 parameter_list: parameter_list COMMA IDENTIFIER .

    $default  reduce using rule 9 (parameter_list)


State 137

   22 if_statement: IF LP expression RP block .
   23             | IF LP expression RP block . ELSE block
   24             | IF LP expression RP block . elsif_list
   25             | IF LP expression RP block . elsif_list ELSE block

    ELSE   shift, and go to state 146
    ELSIF  shift, and go to state 147

    $default  reduce using rule 22 (if_statement)

    elsif_list  转到状态 148
    elsif       转到状态 149


State 138

   29 while_statement: WHILE LP expression RP block .

    $default  reduce using rule 29 (while_statement)


State 139

   30 for_statement: FOR LP expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt RP block

    SEMICOLON  shift, and go to state 150


State 140

   68 postfix_expression: postfix_expression DOT IDENTIFIER LP RP .

    $default  reduce using rule 68 (postfix_expression)


State 141

   67 postfix_expression: postfix_expression DOT IDENTIFIER LP argument_list . RP
   73 argument_list: argument_list . COMMA expression

    RP     shift, and go to state 151
    COMMA  shift, and go to state 113


State 142

   71 postfix_expression: postfix_expression DOT IDENTIFIER ASSIGN function_definition .

    $default  reduce using rule 71 (postfix_expression)


State 143

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 5 (function_definition)


State 144

   33 block: LC statement_list RC .

    $default  reduce using rule 33 (block)


State 145

   12 statement_list: statement_list statement .

    $default  reduce using rule 12 (statement_list)


State 146

   23 if_statement: IF LP expression RP block ELSE . block

    LC  shift, and go to state 116

    block  转到状态 152


State 147

   28 elsif: ELSIF . LP expression RP block

    LP  shift, and go to state 153


State 148

   24 if_statement: IF LP expression RP block elsif_list .
   25             | IF LP expression RP block elsif_list . ELSE block
   27 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 154
    ELSIF  shift, and go to state 147

    $default  reduce using rule 24 (if_statement)

    elsif  转到状态 155


State 149

   26 elsif_list: elsif .

    $default  reduce using rule 26 (elsif_list)


State 150

   30 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    $default  reduce using rule 35 (expression_opt)

    expression_opt             转到状态 156
    expression                 转到状态 48
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 151

   67 postfix_expression: postfix_expression DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 67 (postfix_expression)


State 152

   23 if_statement: IF LP expression RP block ELSE block .

    $default  reduce using rule 23 (if_statement)


State 153

   28 elsif: ELSIF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    LB              shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    VAR             shift, and go to state 19

    expression                 转到状态 157
    logical_or_expression      转到状态 31
    logical_and_expression     转到状态 32
    equality_expression        转到状态 33
    relational_expression      转到状态 34
    additive_expression        转到状态 35
    multiplicative_expression  转到状态 36
    unary_expression           转到状态 37
    postfix_expression         转到状态 38
    primary_expression         转到状态 39
    array_literal              转到状态 40


State 154

   25 if_statement: IF LP expression RP block elsif_list ELSE . block

    LC  shift, and go to state 116

    block  转到状态 158


State 155

   27 elsif_list: elsif_list elsif .

    $default  reduce using rule 27 (elsif_list)


State 156

   30 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . RP block

    RP  shift, and go to state 159


State 157

   28 elsif: ELSIF LP expression . RP block

    RP  shift, and go to state 160


State 158

   25 if_statement: IF LP expression RP block elsif_list ELSE block .

    $default  reduce using rule 25 (if_statement)


State 159

   30 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP . block

    LC  shift, and go to state 116

    block  转到状态 161


State 160

   28 elsif: ELSIF LP expression RP . block

    LC  shift, and go to state 116

    block  转到状态 162


State 161

   30 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block .

    $default  reduce using rule 30 (for_statement)


State 162

   28 elsif: ELSIF LP expression RP block .

    $default  reduce using rule 28 (elsif)
